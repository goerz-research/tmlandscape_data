#!/bin/bash
#SBATCH --job-name=CPH0013
#SBATCH --time=25:00:00
#SBATCH --nodes=1
#SBATCH --cpus-per-task=4
#SBATCH --mem=4000
#SBATCH --partition=AG-KOCH
#SBATCH --output=%j-oct-%N.out

echo "Job $SLURM_JOBID ($SLURM_JOB_NAME) started on" `hostname` `date` >> ~/.jobs.log

#export SCRATCH_ROOT=/local
if [ ! -d $SCRATCH_ROOT ]; then echo "$SCRATCH_ROOT not available"; scancel $SLURM_JOBID; fi
#export ARCHIVE_ROOT=$HOME/storage/finished_jobs/holonomic
#if [ ! -d $ARCHIVE_ROOT ]; then echo "$ARCHIVE_ROOT not available"; scancel $SLURM_JOBID; fi
#export PREFIX=$HOME/local
#export PATH=$PREFIX/bin:$PATH
#export LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH
export OMP_NUM_THREADS=4

TMP_RUNFOLDER=$SCRATCH_ROOT/$SLURM_JOBID

mkdir -p $TMP_RUNFOLDER || exit 1
# Copy data to runfolder
cp O_holonomic.dat config pulse.dat generate_guess.py oct_iters.dat $TMP_RUNFOLDER

# Copy in executables
execs="tm_en_gh tm_en_oct tm_en_prop"
cp $execs $TMP_RUNFOLDER
for exec in $execs; do
    if [ ! -e $exec ]; then cp $PREFIX/bin/$exec $TMP_RUNFOLDER; fi
done

pushd .
cd $TMP_RUNFOLDER


############## **** Run main program **** ##################
set -x

chmod a+x ./generate_guess.py
./tm_en_gh .
./tm_en_oct . | tee oct.log

set +x

############ **** Cleanup & Copy Back **** ################

echo "# pulse generated by run $SLURM_JOBID ($SLURM_JOB_NAME)" >> pulse.dat

# Clean up
for exec in $execs; do
    rm -f $exec
done

popd # back to original folder
mkdir -p oct_pulses
cp $TMP_RUNFOLDER/pulse.dat.0* oct_pulses
cp $TMP_RUNFOLDER/pulse.dat .
cp $TMP_RUNFOLDER/oct_iters.dat .

# Archive
#tar -c $TMP_RUNFOLDER | gzip > $ARCHIVE_ROOT/${SLURM_JOBID}_${SLURM_JOB_NAME}.tgz
#if [ -e $ARCHIVE_ROOT/${SLURM_JOBID}_${SLURM_JOB_NAME}.tgz ]; then
   rm -rf $TMP_RUNFOLDER
#fi
